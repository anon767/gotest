---
swagger: "2.0"
info:
  description: "A simple API to learn how to write OpenAPI Specification"
  version: "1.0.0"
  title: "Simple API"
host: "simple.api"
basePath: "/openapi101"
schemes:
- "https"
paths:
  /persons:
    get:
      summary: "Gets some persons"
      description: "Returns a list containing all persons. The list supports paging."
      parameters: []
      responses:
        200:
          description: "A list of Person"
          schema:
            $ref: "#/definitions/Persons"
        500:
          description: "An unexpected error occured."
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: "Creates a person"
      description: "Adds a new person to the persons list."
      parameters:
      - in: "body"
        name: "person"
        description: "The person to create."
        required: false
        schema:
          $ref: "#/definitions/Person"
        x-exportParamName: "Person"
      responses:
        204:
          description: "Person succesfully created."
        400:
          description: "Person couldn't have been created."
        500:
          description: "An unexpected error occured."
          schema:
            $ref: "#/definitions/Error"
  /persons/{username}:
    get:
      summary: "Gets a person"
      description: "Returns a single person for its username."
      parameters:
      - name: "username"
        in: "path"
        description: "The person's username"
        required: true
        type: "string"
        x-exportParamName: "Username"
      responses:
        200:
          description: "A Person"
          schema:
            $ref: "#/definitions/Person"
        404:
          description: "Person does not exist."
        500:
          description: "An unexpected error occured."
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: "Deletes a person"
      description: "Delete a single person identified via its username"
      parameters:
      - name: "username"
        in: "path"
        description: "The person's username"
        required: true
        type: "string"
        x-exportParamName: "Username"
      responses:
        204:
          description: "Person successfully deleted."
        404:
          description: "Person does not exist."
        500:
          description: "An unexpected error occured."
          schema:
            $ref: "#/definitions/Error"
  /persons/{username}/friends:
    get:
      summary: "Gets a person's friends"
      description: "Returns a list containing all persons. The list supports paging."
      parameters:
      - name: "username"
        in: "path"
        description: "The person's username"
        required: true
        type: "string"
        x-exportParamName: "Username"
      responses:
        200:
          description: "A person's friends list"
          schema:
            $ref: "#/definitions/Persons"
        404:
          description: "Person does not exist."
        500:
          description: "An unexpected error occured."
          schema:
            $ref: "#/definitions/Error"
definitions:
  Person:
    required:
    - "username"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      username:
        type: "string"
    example:
      firstName: "firstName"
      lastName: "lastName"
      username: "username"
  Persons:
    type: "array"
    items:
      $ref: "#/definitions/Person"
  Error:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
parameters:
  username:
    name: "username"
    in: "path"
    description: "The person's username"
    required: true
    type: "string"
    x-exportParamName: "Username"
responses:
  Standard500ErrorResponse:
    description: "An unexpected error occured."
    schema:
      $ref: "#/definitions/Error"
  PersonDoesNotExistResponse:
    description: "Person does not exist."
